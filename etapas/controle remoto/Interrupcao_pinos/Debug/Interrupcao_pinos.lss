
Interrupcao_pinos.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  0000013c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000090  00000000  00000000  00000808  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000898  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000002a  00000000  00000000  000008b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000097  00000000  00000000  000008e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000063  00000000  00000000  00000979  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000159  00000000  00000000  000009dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  00000b38  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000010a  00000000  00000000  00000b68  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 0000001e  00000000  00000000  00000c72  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 40 00 	jmp	0x80	; 0x80 <__vector_3>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 62 00 	call	0xc4	; 0xc4 <main>
  78:	0c 94 71 00 	jmp	0xe2	; 0xe2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <__vector_3>:

#define cpl_bit(adress,bit) (adress ^= (1<<bit))
#define tst_bit(adress,bit) (adress & (1<<bit))   

ISR(PCINT0_vect)
{
  80:	1f 92       	push	r1
  82:	0f 92       	push	r0
  84:	0f b6       	in	r0, 0x3f	; 63
  86:	0f 92       	push	r0
  88:	11 24       	eor	r1, r1
  8a:	8f 93       	push	r24
  8c:	9f 93       	push	r25
  8e:	ef 93       	push	r30
  90:	ff 93       	push	r31
	PCICR	&= (~(1 << PCIE0));
  92:	e8 e6       	ldi	r30, 0x68	; 104
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	80 81       	ld	r24, Z
  98:	8e 7f       	andi	r24, 0xFE	; 254
  9a:	80 83       	st	Z, r24
	cpl_bit(PORTC, PC0);
  9c:	98 b1       	in	r25, 0x08	; 8
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	89 27       	eor	r24, r25
  a2:	88 b9       	out	0x08, r24	; 8
	while(tst_bit(PINB, PB0));
  a4:	18 99       	sbic	0x03, 0	; 3
  a6:	fe cf       	rjmp	.-4      	; 0xa4 <__vector_3+0x24>
	PCICR	|= (1 << PCIE0);
  a8:	e8 e6       	ldi	r30, 0x68	; 104
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	81 60       	ori	r24, 0x01	; 1
  b0:	80 83       	st	Z, r24
}
  b2:	ff 91       	pop	r31
  b4:	ef 91       	pop	r30
  b6:	9f 91       	pop	r25
  b8:	8f 91       	pop	r24
  ba:	0f 90       	pop	r0
  bc:	0f be       	out	0x3f, r0	; 63
  be:	0f 90       	pop	r0
  c0:	1f 90       	pop	r1
  c2:	18 95       	reti

000000c4 <main>:


int main(void)
{
    DDRB	&= (~(1 << PB0));
  c4:	20 98       	cbi	0x04, 0	; 4
	PORTB	|= (1 << PB0);
  c6:	28 9a       	sbi	0x05, 0	; 5
	DDRC	|= (1 << PC0);
  c8:	38 9a       	sbi	0x07, 0	; 7
	
	PCICR	|= (1 << PCIE0);
  ca:	e8 e6       	ldi	r30, 0x68	; 104
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	81 60       	ori	r24, 0x01	; 1
  d2:	80 83       	st	Z, r24
	PCMSK0	|= (1 << PCINT0);
  d4:	eb e6       	ldi	r30, 0x6B	; 107
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	80 81       	ld	r24, Z
  da:	81 60       	ori	r24, 0x01	; 1
  dc:	80 83       	st	Z, r24
	
	sei();
  de:	78 94       	sei
  e0:	ff cf       	rjmp	.-2      	; 0xe0 <main+0x1c>

000000e2 <_exit>:
  e2:	f8 94       	cli

000000e4 <__stop_program>:
  e4:	ff cf       	rjmp	.-2      	; 0xe4 <__stop_program>
